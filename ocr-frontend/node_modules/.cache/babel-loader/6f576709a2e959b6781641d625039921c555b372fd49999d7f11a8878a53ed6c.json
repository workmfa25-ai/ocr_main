{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\ocr_main\\\\ocr-frontend\\\\src\\\\components\\\\DocumentViewer\\\\DocumentViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Nav, Button } from 'react-bootstrap';\nimport { FiSave } from 'react-icons/fi';\nimport './DocumentViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentViewer = ({\n  document,\n  onSaveChanges\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('original');\n  const [editedContent, setEditedContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Initialize edited content when document changes\n  useEffect(() => {\n    if (document && document.extractedContent) {\n      setEditedContent(document.extractedContent);\n    }\n  }, [document]);\n  if (!document) {\n    return null;\n  }\n  const {\n    fileName,\n    documentType,\n    originalContent,\n    extractedContent\n  } = document;\n  const handleSave = () => {\n    if (onSaveChanges) {\n      onSaveChanges(editedContent);\n    }\n    setIsEditing(false);\n  };\n  const handleCancel = () => {\n    setEditedContent(extractedContent || '');\n    setIsEditing(false);\n  };\n  const handleExport = type => {\n    let dataStr, fileName, mimeType;\n    if (type === 'json') {\n      dataStr = JSON.stringify(editedContent, null, 2);\n      fileName = fileName ? fileName.replace(/\\.[^/.]+$/, '') + '.json' : 'document.json';\n      mimeType = 'application/json';\n    } else if (type === 'csv') {\n      // Simple CSV: split lines, comma join, not for nested data\n      const lines = editedContent.split('\\n');\n      dataStr = lines.map(line => '\"' + line.replace(/\"/g, '\"\"') + '\"').join(',\\n');\n      fileName = fileName ? fileName.replace(/\\.[^/.]+$/, '') + '.csv' : 'document.csv';\n      mimeType = 'text/csv';\n    } else if (type === 'excel') {\n      // Excel: use CSV format but with .xls extension\n      const lines = editedContent.split('\\n');\n      dataStr = lines.map(line => '\"' + line.replace(/\"/g, '\"\"') + '\"').join(',\\n');\n      fileName = fileName ? fileName.replace(/\\.[^/.]+$/, '') + '.xls' : 'document.xls';\n      mimeType = 'application/vnd.ms-excel';\n    }\n    const blob = new Blob([dataStr], {\n      type: mimeType\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const renderOriginalContent = () => {\n    if (documentType && documentType.startsWith('image/')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: originalContent,\n          alt: \"Original document\",\n          className: \"document-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    } else if (documentType === 'application/pdf') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-pdf-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: originalContent,\n          title: \"Original PDF document\",\n          className: \"document-pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"document-text\",\n          children: originalContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderExtractedContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document-text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extracted-content-header mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: isEditing ? \"outline-secondary\" : \"outline-primary\",\n          size: \"sm\",\n          onClick: () => setIsEditing(!isEditing),\n          className: \"me-2\",\n          children: isEditing ? 'Cancel Edit' : 'Edit Text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          size: \"sm\",\n          onClick: handleSave,\n          children: [/*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), \" Save Changes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value),\n        className: \"form-control document-textarea\",\n        rows: \"20\",\n        placeholder: \"Edit extracted content here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"document-text\",\n        children: editedContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n  const renderJsonView = () => {\n    try {\n      const jsonData = JSON.parse(editedContent);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-json-container\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"document-json\",\n          children: JSON.stringify(jsonData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this);\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: \"Unable to parse as JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"document-text\",\n          children: editedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"document-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"document-actions\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            size: \"sm\",\n            className: \"me-2\",\n            onClick: () => handleExport('csv'),\n            children: \"Export as CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            size: \"sm\",\n            className: \"me-2\",\n            onClick: () => handleExport('json'),\n            children: \"Export as JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            size: \"sm\",\n            onClick: () => handleExport('excel'),\n            children: \"Export to Excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            active: activeTab === 'original',\n            onClick: () => setActiveTab('original'),\n            children: \"Original Document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            active: activeTab === 'extracted',\n            onClick: () => setActiveTab('extracted'),\n            children: \"Extracted View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            active: activeTab === 'json',\n            onClick: () => setActiveTab('json'),\n            children: \"JSON View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"document-body\",\n      children: [activeTab === 'original' && renderOriginalContent(), activeTab === 'extracted' && renderExtractedContent(), activeTab === 'json' && renderJsonView()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentViewer, \"sWPW+DSfKgswniUUk4bK5212h7Q=\");\n_c = DocumentViewer;\nexport default DocumentViewer;\nvar _c;\n$RefreshReg$(_c, \"DocumentViewer\");","map":{"version":3,"names":["React","useState","useEffect","Card","Nav","Button","FiSave","jsxDEV","_jsxDEV","DocumentViewer","document","onSaveChanges","_s","activeTab","setActiveTab","editedContent","setEditedContent","isEditing","setIsEditing","extractedContent","fileName","documentType","originalContent","handleSave","handleCancel","handleExport","type","dataStr","mimeType","JSON","stringify","replace","lines","split","map","line","join","blob","Blob","url","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","renderOriginalContent","startsWith","className","children","src","alt","_jsxFileName","lineNumber","columnNumber","title","renderExtractedContent","variant","size","onClick","value","onChange","e","target","rows","placeholder","renderJsonView","jsonData","parse","error","Header","Item","Link","active","Body","_c","$RefreshReg$"],"sources":["D:/Workspace/ocr_main/ocr-frontend/src/components/DocumentViewer/DocumentViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Nav, Button } from 'react-bootstrap';\nimport { FiSave } from 'react-icons/fi';\nimport './DocumentViewer.css';\n\nconst DocumentViewer = ({ document, onSaveChanges }) => {\n  const [activeTab, setActiveTab] = useState('original');\n  const [editedContent, setEditedContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  \n  // Initialize edited content when document changes\n  useEffect(() => {\n    if (document && document.extractedContent) {\n      setEditedContent(document.extractedContent);\n    }\n  }, [document]);\n  \n  if (!document) {\n    return null;\n  }\n\n  const { fileName, documentType, originalContent, extractedContent } = document;\n\n  const handleSave = () => {\n    if (onSaveChanges) {\n      onSaveChanges(editedContent);\n    }\n    setIsEditing(false);\n  };\n\n  const handleCancel = () => {\n    setEditedContent(extractedContent || '');\n    setIsEditing(false);\n  };\n\n  const handleExport = (type) => {\n    let dataStr, fileName, mimeType;\n    if (type === 'json') {\n      dataStr = JSON.stringify(editedContent, null, 2);\n      fileName = fileName ? fileName.replace(/\\.[^/.]+$/, '') + '.json' : 'document.json';\n      mimeType = 'application/json';\n    } else if (type === 'csv') {\n      // Simple CSV: split lines, comma join, not for nested data\n      const lines = editedContent.split('\\n');\n      dataStr = lines.map(line => '\"' + line.replace(/\"/g, '\"\"') + '\"').join(',\\n');\n      fileName = fileName ? fileName.replace(/\\.[^/.]+$/, '') + '.csv' : 'document.csv';\n      mimeType = 'text/csv';\n    } else if (type === 'excel') {\n      // Excel: use CSV format but with .xls extension\n      const lines = editedContent.split('\\n');\n      dataStr = lines.map(line => '\"' + line.replace(/\"/g, '\"\"') + '\"').join(',\\n');\n      fileName = fileName ? fileName.replace(/\\.[^/.]+$/, '') + '.xls' : 'document.xls';\n      mimeType = 'application/vnd.ms-excel';\n    }\n    const blob = new Blob([dataStr], { type: mimeType });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const renderOriginalContent = () => {\n    if (documentType && documentType.startsWith('image/')) {\n      return (\n        <div className=\"document-image-container\">\n          <img \n            src={originalContent} \n            alt=\"Original document\" \n            className=\"document-image\"\n          />\n        </div>\n      );\n    } else if (documentType === 'application/pdf') {\n      return (\n        <div className=\"document-pdf-container\">\n          <iframe \n            src={originalContent} \n            title=\"Original PDF document\"\n            className=\"document-pdf\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"document-text-container\">\n          <pre className=\"document-text\">{originalContent}</pre>\n        </div>\n      );\n    }\n  };\n\n  const renderExtractedContent = () => {\n    return (\n      <div className=\"document-text-container\">\n        <div className=\"extracted-content-header mb-3\">\n          <Button \n            variant={isEditing ? \"outline-secondary\" : \"outline-primary\"}\n            size=\"sm\"\n            onClick={() => setIsEditing(!isEditing)}\n            className=\"me-2\"\n          >\n            {isEditing ? 'Cancel Edit' : 'Edit Text'}\n          </Button>\n          {isEditing && (\n            <Button \n              variant=\"success\" \n              size=\"sm\"\n              onClick={handleSave}\n            >\n              <FiSave /> Save Changes\n            </Button>\n          )}\n        </div>\n        \n        {isEditing ? (\n          <textarea\n            value={editedContent}\n            onChange={(e) => setEditedContent(e.target.value)}\n            className=\"form-control document-textarea\"\n            rows=\"20\"\n            placeholder=\"Edit extracted content here...\"\n          />\n        ) : (\n          <pre className=\"document-text\">{editedContent}</pre>\n        )}\n      </div>\n    );\n  };\n\n  const renderJsonView = () => {\n    try {\n      const jsonData = JSON.parse(editedContent);\n      return (\n        <div className=\"document-json-container\">\n          <pre className=\"document-json\">\n            {JSON.stringify(jsonData, null, 2)}\n          </pre>\n        </div>\n      );\n    } catch (error) {\n      return (\n        <div className=\"document-text-container\">\n          <p className=\"text-danger\">Unable to parse as JSON</p>\n          <pre className=\"document-text\">{editedContent}</pre>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Card className=\"document-viewer\">\n      <Card.Header>\n        <div className=\"document-header\">\n          <h5>{fileName}</h5>\n          <div className=\"document-actions\">\n            <Button variant=\"outline-secondary\" size=\"sm\" className=\"me-2\" onClick={() => handleExport('csv')}>\n              Export as CSV\n            </Button>\n            <Button variant=\"outline-secondary\" size=\"sm\" className=\"me-2\" onClick={() => handleExport('json')}>\n              Export as JSON\n            </Button>\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => handleExport('excel')}>\n              Export to Excel\n            </Button>\n          </div>\n        </div>\n        <Nav variant=\"tabs\" className=\"mt-2\">\n          <Nav.Item>\n            <Nav.Link \n              active={activeTab === 'original'}\n              onClick={() => setActiveTab('original')}\n            >\n              Original Document\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link \n              active={activeTab === 'extracted'}\n              onClick={() => setActiveTab('extracted')}\n            >\n              Extracted View\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link \n              active={activeTab === 'json'}\n              onClick={() => setActiveTab('json')}\n            >\n              JSON View\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Card.Header>\n      <Card.Body className=\"document-body\">\n        {activeTab === 'original' && renderOriginalContent()}\n        {activeTab === 'extracted' && renderExtractedContent()}\n        {activeTab === 'json' && renderJsonView()}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DocumentViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
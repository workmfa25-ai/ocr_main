{"ast":null,"code":"/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Diff\", {\n  enumerable: true,\n  get: function get() {\n    return _base[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"diffChars\", {\n  enumerable: true,\n  get: function get() {\n    return _character.diffChars;\n  }\n});\nObject.defineProperty(exports, \"diffWords\", {\n  enumerable: true,\n  get: function get() {\n    return _word.diffWords;\n  }\n});\nObject.defineProperty(exports, \"diffWordsWithSpace\", {\n  enumerable: true,\n  get: function get() {\n    return _word.diffWordsWithSpace;\n  }\n});\nObject.defineProperty(exports, \"diffLines\", {\n  enumerable: true,\n  get: function get() {\n    return _line.diffLines;\n  }\n});\nObject.defineProperty(exports, \"diffTrimmedLines\", {\n  enumerable: true,\n  get: function get() {\n    return _line.diffTrimmedLines;\n  }\n});\nObject.defineProperty(exports, \"diffSentences\", {\n  enumerable: true,\n  get: function get() {\n    return _sentence.diffSentences;\n  }\n});\nObject.defineProperty(exports, \"diffCss\", {\n  enumerable: true,\n  get: function get() {\n    return _css.diffCss;\n  }\n});\nObject.defineProperty(exports, \"diffJson\", {\n  enumerable: true,\n  get: function get() {\n    return _json.diffJson;\n  }\n});\nObject.defineProperty(exports, \"canonicalize\", {\n  enumerable: true,\n  get: function get() {\n    return _json.canonicalize;\n  }\n});\nObject.defineProperty(exports, \"diffArrays\", {\n  enumerable: true,\n  get: function get() {\n    return _array.diffArrays;\n  }\n});\nObject.defineProperty(exports, \"applyPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _apply.applyPatch;\n  }\n});\nObject.defineProperty(exports, \"applyPatches\", {\n  enumerable: true,\n  get: function get() {\n    return _apply.applyPatches;\n  }\n});\nObject.defineProperty(exports, \"parsePatch\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.parsePatch;\n  }\n});\nObject.defineProperty(exports, \"merge\", {\n  enumerable: true,\n  get: function get() {\n    return _merge.merge;\n  }\n});\nObject.defineProperty(exports, \"reversePatch\", {\n  enumerable: true,\n  get: function get() {\n    return _reverse.reversePatch;\n  }\n});\nObject.defineProperty(exports, \"structuredPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.structuredPatch;\n  }\n});\nObject.defineProperty(exports, \"createTwoFilesPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.createTwoFilesPatch;\n  }\n});\nObject.defineProperty(exports, \"createPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.createPatch;\n  }\n});\nObject.defineProperty(exports, \"formatPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.formatPatch;\n  }\n});\nObject.defineProperty(exports, \"convertChangesToDMP\", {\n  enumerable: true,\n  get: function get() {\n    return _dmp.convertChangesToDMP;\n  }\n});\nObject.defineProperty(exports, \"convertChangesToXML\", {\n  enumerable: true,\n  get: function get() {\n    return _xml.convertChangesToXML;\n  }\n});\n\n/*istanbul ignore end*/\nvar /*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./diff/base\"))\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_character = require(\"./diff/character\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_word = require(\"./diff/word\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_line = require(\"./diff/line\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_sentence = require(\"./diff/sentence\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_css = require(\"./diff/css\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_json = require(\"./diff/json\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_array = require(\"./diff/array\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_apply = require(\"./patch/apply\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_parse = require(\"./patch/parse\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_merge = require(\"./patch/merge\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_reverse = require(\"./patch/reverse\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_create = require(\"./patch/create\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_dmp = require(\"./convert/dmp\")\n/*istanbul ignore end*/;\nvar /*istanbul ignore start*/\n_xml = require(\"./convert/xml\")\n/*istanbul ignore end*/;\n\n/*istanbul ignore start*/\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\n/*istanbul ignore end*/","map":{"version":3,"names":["_base","_interopRequireDefault","require","_character","_word","_line","_sentence","_css","_json","_array","_apply","_parse","_merge","_reverse","_create","_dmp","_xml"],"sources":["D:\\Workspace\\ocr_main\\ocr-frontend\\node_modules\\diff\\src\\index.js"],"sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAA;AACA;AAAAC,UAAA,GAAAD,OAAA;AAAA;AACA;AAAAE,KAAA,GAAAF,OAAA;AAAA;AACA;AAAAG,KAAA,GAAAH,OAAA;AAAA;AACA;AAAAI,SAAA,GAAAJ,OAAA;AAAA;AAEA;AAAAK,IAAA,GAAAL,OAAA;AAAA;AACA;AAAAM,KAAA,GAAAN,OAAA;AAAA;AAEA;AAAAO,MAAA,GAAAP,OAAA;AAAA;AAEA;AAAAQ,MAAA,GAAAR,OAAA;AAAA;AACA;AAAAS,MAAA,GAAAT,OAAA;AAAA;AACA;AAAAU,MAAA,GAAAV,OAAA;AAAA;AACA;AAAAW,QAAA,GAAAX,OAAA;AAAA;AACA;AAAAY,OAAA,GAAAZ,OAAA;AAAA;AAEA;AAAAa,IAAA,GAAAb,OAAA;AAAA;AACA;AAAAc,IAAA,GAAAd,OAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}